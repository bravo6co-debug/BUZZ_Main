version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: buzz-postgres
    environment:
      POSTGRES_DB: buzz_platform
      POSTGRES_USER: buzzuser
      POSTGRES_PASSWORD: buzzpass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d/
    networks:
      - buzz-network
    restart: unless-stopped

  # Redis (optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: buzz-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - buzz-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Buzz Backend API
  api:
    build: .
    container_name: buzz-backend
    environment:
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: buzz_platform
      DB_USER: buzzuser
      DB_PASSWORD: buzzpass123
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # JWT (Change these in production!)
      JWT_SECRET: your_jwt_secret_change_this_in_production
      JWT_REFRESH_SECRET: your_refresh_secret_change_this_in_production
      
      # Cors
      CORS_ORIGIN: http://localhost:3001,http://localhost:3000
      
      # Logging
      LOG_LEVEL: info
      
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - buzz-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx (optional - for reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: buzz-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - buzz-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  buzz-network:
    driver: bridge